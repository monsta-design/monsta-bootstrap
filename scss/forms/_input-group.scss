//
// Base styles
//
@import "../monsta";

.#{$prefix}input-group {
  position: relative;
  display: flex;
  flex-wrap: wrap; // For form validation feedback
  align-items: stretch;
  width: 100%;

  > .#{$prefix}form-control,
  > .#{$prefix}form-select {
    position: relative; // For focus state's z-index
    flex: 1 1 auto;
    width: 1%;
    min-width: 0; // https://stackoverflow.com/questions/36247140/why-dont-flex-items-shrink-past-content-size
  }

  // Bring the "active" form control to the top of surrounding elements
  > .#{$prefix}form-control:focus,
  > .#{$prefix}form-select:focus {
    z-index: 3;
  }

  // Ensure buttons are always above inputs for more visually pleasing borders.
  // This isn't needed for `.input-group-text` since it shares the same border-color
  // as our inputs.
  .#{$prefix}btn {
    position: relative;
    z-index: 2;

    &:focus {
      z-index: 3;
    }
  }
}


// Textual addons
//
// Serves as a catch-all element for any text or radio/checkbox input you wish
// to prepend or append to an input.

.#{$prefix}input-group-text {
  display: flex;
  align-items: center;
  padding: $input-group-addon-padding-y $input-group-addon-padding-x;
  @include font-size($input-font-size); // Match inputs
  font-weight: $input-group-addon-font-weight;
  line-height: $input-line-height;
  color: $input-group-addon-color;
  text-align: center;
  white-space: nowrap;
  background-color: $input-group-addon-bg;
  border: $input-border-width solid $input-group-addon-border-color;
  @include border-radius($input-border-radius);
}


// Sizing
//
// Remix the default form control sizing classes into new ones for easier
// manipulation.

.#{$prefix}input-group-lg > .#{$prefix}form-control,
.#{$prefix}input-group-lg > .#{$prefix}form-select,
.#{$prefix}input-group-lg > .#{$prefix}input-group-text,
.#{$prefix}input-group-lg > .#{$prefix}btn {
  padding: $input-padding-y-lg $input-padding-x-lg;
  @include font-size($input-font-size-lg);
  @include border-radius($input-border-radius-lg);
}

.#{$prefix}input-group-sm > .#{$prefix}form-control,
.#{$prefix}input-group-sm > .#{$prefix}form-select,
.#{$prefix}input-group-sm > .#{$prefix}input-group-text,
.#{$prefix}input-group-sm > .#{$prefix}btn {
  padding: $input-padding-y-sm $input-padding-x-sm;
  @include font-size($input-font-size-sm);
  @include border-radius($input-border-radius-sm);
}

.#{$prefix}input-group-lg > .#{$prefix}form-select,
.#{$prefix}input-group-sm > .#{$prefix}form-select {
  padding-right: $form-select-padding-x + $form-select-indicator-padding;
}


// Rounded corners
//
// These rulesets must come after the sizing ones to properly override sm and lg
// border-radius values when extending. They're more specific than we'd like
// with the `.input-group >` part, but without it, we cannot override the sizing.

// stylelint-disable-next-line no-duplicate-selectors
.#{$prefix}input-group {
  &:not(.#{$prefix}has-validation) {
    > :not(:last-child):not(.#{$prefix}dropdown-toggle):not(.#{$prefix}dropdown-menu),
    > .#{$prefix}dropdown-toggle:nth-last-child(n + 3) {
      @include border-end-radius(0);
    }
  }

  &.#{$prefix}has-validation {
    > :nth-last-child(n + 3):not(.#{$prefix}dropdown-toggle):not(.#{$prefix}dropdown-menu),
    > .#{$prefix}dropdown-toggle:nth-last-child(n + 4) {
      @include border-end-radius(0);
    }
  }

  $validation-messages: "";
  @each $state in map-keys($form-validation-states) {
    $validation-messages: $validation-messages + ":not(." +$prefix+ unquote($state) + "-tooltip)" + ":not(." +$prefix+ unquote($state) + "-feedback)";
  }

  > :not(:first-child):not(.#{$prefix}dropdown-menu)#{$validation-messages} {
    margin-left: -$input-border-width;
    @include border-start-radius(0);
  }
}
